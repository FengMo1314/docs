import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as c,o as l,c as u,a as s,b as n,d as a,w as t,e as o}from"./app-BhtAeQQz.js";const r={},d=s("h1",{id:"客户端配置的使用方法",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#客户端配置的使用方法"},[s("span",null,"客户端配置的使用方法")])],-1),k=o(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> getDirname<span class="token punctuation">,</span> path <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/utils&#39;</span>

<span class="token keyword">const</span> __dirname <span class="token operator">=</span> <span class="token function">getDirname</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span>

<span class="token keyword">const</span> pluginOrTheme <span class="token operator">=</span> <span class="token punctuation">{</span>
  clientConfigFile<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./path/to/clientConfig.ts&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),v=s("code",null,"vuepress/client",-1),m=o(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">enhance</span><span class="token punctuation">(</span><span class="token punctuation">{</span> app<span class="token punctuation">,</span> router<span class="token punctuation">,</span> siteData <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  layouts<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  rootComponents<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="enhance" tabindex="-1"><a class="header-anchor" href="#enhance"><span>enhance</span></a></h2><p><code>enhance</code> 函数既可以是同步的，也可以是异步的。它接收一个 Context 参数，包含以下属性：</p>`,3),h=s("code",null,"app",-1),f={href:"https://staging-cn.vuejs.org/api/application.html#create-app",target:"_blank",rel:"noopener noreferrer"},g=s("code",null,"router",-1),b={href:"https://router.vuejs.org/zh/api/index.html#createrouter",target:"_blank",rel:"noopener noreferrer"},y=s("code",null,"siteData",-1),_=s("p",null,[s("code",null,"enhance"),n(" 函数会在客户端应用创建后被调用，你可以对 Vue 应用添加各种能力。")],-1),w=s("h3",{id:"注册-vue-组件",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#注册-vue-组件"},[s("span",null,"注册 Vue 组件")])],-1),C={href:"https://staging-cn.vuejs.org/api/application.html#app-component",target:"_blank",rel:"noopener noreferrer"},x=o(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>
<span class="token keyword">import</span> MyComponent <span class="token keyword">from</span> <span class="token string">&#39;./MyComponent.vue&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">enhance</span><span class="token punctuation">(</span><span class="token punctuation">{</span> app <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;MyComponent&#39;</span><span class="token punctuation">,</span> MyComponent<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用不支持-ssr-的功能" tabindex="-1"><a class="header-anchor" href="#使用不支持-ssr-的功能"><span>使用不支持 SSR 的功能</span></a></h3><p>VuePress 会在构建过程中生成一个 SSR 应用，用以对页面进行预渲染。一般而言，如果一段代码在客户端应用 Mount 之前就使用了浏览器或 DOM API ，我们就认为其对 SSR 不友好，即不支持 SSR 。</p>`,3),S=s("code",null,"enhance",-1),R=s("code",null,"__VUEPRESS_SSR__",-1),E=o(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token keyword">async</span> <span class="token function">enhance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>__VUEPRESS_SSR__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> nonSsrFriendlyModule <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;non-ssr-friendly-module&#39;</span><span class="token punctuation">)</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-router-方法" tabindex="-1"><a class="header-anchor" href="#使用-router-方法"><span>使用 Router 方法</span></a></h3>`,2),z={href:"https://router.vuejs.org/zh/api/index.html#router-%E6%96%B9%E6%B3%95",target:"_blank",rel:"noopener noreferrer"},M=o(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">enhance</span><span class="token punctuation">(</span><span class="token punctuation">{</span> router <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;before navigation&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    router<span class="token punctuation">.</span><span class="token function">afterEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;after navigation&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>我们不推荐使用 <code>addRoute</code> 方法来添加动态路由，因为这些路由记录 <strong>不会</strong> 在构建模式中被预渲染出来。</p><p>当然，如果你了解了这种用法的缺点，你还是可以这样使用。</p></div><h2 id="setup" tabindex="-1"><a class="header-anchor" href="#setup"><span>setup</span></a></h2>`,3),V=s("code",null,"setup",-1),P={href:"https://staging-cn.vuejs.org/api/composition-api-setup.html",target:"_blank",rel:"noopener noreferrer"},A=s("h3",{id:"使用组合式-api",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#使用组合式-api"},[s("span",null,"使用组合式 API")])],-1),B=s("code",null,"setup",-1),j={href:"https://staging-cn.vuejs.org/api/composition-api-setup.html",target:"_blank",rel:"noopener noreferrer"},D=o(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> provide<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useRoute<span class="token punctuation">,</span> useRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取当前的路由位置</span>
    <span class="token keyword">const</span> route <span class="token operator">=</span> <span class="token function">useRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// 或者 vue-router 实例</span>
    <span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// 供给一个值，可以被布局、页面和其他组件注入</span>
    <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token function">provide</span><span class="token punctuation">(</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">,</span> count<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用不支持-ssr-的功能-1" tabindex="-1"><a class="header-anchor" href="#使用不支持-ssr-的功能-1"><span>使用不支持 SSR 的功能</span></a></h3>`,2),I=s("code",null,"setup",-1),T=s("code",null,"__VUEPRESS_SSR__",-1),H={href:"https://staging-cn.vuejs.org/api/composition-api-lifecycle.html#onmounted",target:"_blank",rel:"noopener noreferrer"},L=o(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// 在 mounted 之后使用 DOM API</span>
      document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="layouts" tabindex="-1"><a class="header-anchor" href="#layouts"><span>layouts</span></a></h2>`,2),N=s("code",null,"layouts",-1),O=o(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>
<span class="token keyword">import</span> MyLayout <span class="token keyword">from</span> <span class="token string">&#39;./layouts/MyLayout.vue&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  layouts<span class="token operator">:</span> <span class="token punctuation">{</span>
    MyLayout<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="rootcomponents" tabindex="-1"><a class="header-anchor" href="#rootcomponents"><span>rootComponents</span></a></h2><p><code>rootComponents</code> 是一个组件数组，它们将会直接被放置在客户端 Vue 应用的根节点下。</p><p>该选项的典型使用方式就是放置一些全局的 UI 组件，比如全局弹窗等：</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>
<span class="token keyword">import</span> GlobalPopup <span class="token keyword">from</span> <span class="token string">&#39;./components/GlobalPopup.vue&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  rootComponents<span class="token operator">:</span> <span class="token punctuation">[</span>GlobalPopup<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function U(F,G){const e=c("RouteLink"),p=c("ExternalLinkIcon");return l(),u("div",null,[d,s("p",null,[n("你可以直接在你的项目中使用 "),a(e,{to:"/zh/guide/configuration.html#%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6"},{default:t(()=>[n("客户端配置文件")]),_:1}),n(" 。或者，在你的插件或者主题中，使用 "),a(e,{to:"/zh/reference/plugin-api.html#clientconfigfile"},{default:t(()=>[n("clientConfigFile")]),_:1}),n(" Hook 来指定客户端配置文件的路径：")]),k,s("p",null,[n("在客户端配置文件中，"),v,n(" 提供了一个 "),a(e,{to:"/zh/reference/client-api.html#defineclientconfig"},{default:t(()=>[n("defineClientConfig")]),_:1}),n(" 函数来帮助你定义客户端配置：")]),m,s("ul",null,[s("li",null,[h,n(" 是由 "),s("a",f,[n("createApp"),a(p)]),n(" 创建的 Vue 应用实例。")]),s("li",null,[g,n(" 是由 "),s("a",b,[n("createRouter"),a(p)]),n(" 创建的路由实例。")]),s("li",null,[y,n(" 是一个根据用户配置生成的 Ref 对象，包含 "),a(e,{to:"/zh/reference/config.html#base"},{default:t(()=>[n("base")]),_:1}),n(", "),a(e,{to:"/zh/reference/config.html#lang"},{default:t(()=>[n("lang")]),_:1}),n(", "),a(e,{to:"/zh/reference/config.html#title"},{default:t(()=>[n("title")]),_:1}),n(", "),a(e,{to:"/zh/reference/config.html#description"},{default:t(()=>[n("description")]),_:1}),n(", "),a(e,{to:"/zh/reference/config.html#head"},{default:t(()=>[n("head")]),_:1}),n(" 和 "),a(e,{to:"/zh/reference/config.html#locales"},{default:t(()=>[n("locales")]),_:1}),n("。")])]),_,w,s("p",null,[n("你可以通过 "),s("a",C,[n("app.component"),a(p)]),n(" 方法来注册 Vue 全局组件：")]),x,s("p",null,[n("我们已经提供了一个 "),a(e,{to:"/zh/reference/components.html#clientonly"},{default:t(()=>[n("ClientOnly")]),_:1}),n(" 组件来包裹不支持 SSR 的内容。")]),s("p",null,[n("在 "),S,n(" 函数中，你可以使用 "),a(e,{to:"/zh/reference/client-api.html#ssr"},{default:t(()=>[R]),_:1}),n(" 标记来处理这种情况。")]),E,s("p",null,[n("你可以使用 vue-router 提供的 "),s("a",z,[n("Router 方法"),a(p)]),n(" 。例如，添加导航钩子：")]),M,s("p",null,[V,n(" 函数会在客户端 Vue 应用的 "),s("a",P,[n("setup"),a(p)]),n(" Hook 中被调用。")]),A,s("p",null,[n("你可以把 "),B,n(" 函数当作根组件的 "),s("a",j,[n("setup"),a(p)]),n(" Hook 中的一部分。因此，所有的组合式 API 都可以在这里使用。")]),D,s("p",null,[n("在 "),I,n(" 函数中，"),a(e,{to:"/zh/reference/client-api.html#ssr"},{default:t(()=>[T]),_:1}),n(" 标记同样可用。")]),s("p",null,[n("使用不支持 SSR 的功能的另一种方式就是将他们放在 "),s("a",H,[n("onMounted"),a(p)]),n(" Hook 中：")]),L,s("p",null,[N,n(" 配置项用于设置布局组件。你在此处注册布局后，用户就可以通过 "),a(e,{to:"/zh/reference/frontmatter.html#layout"},{default:t(()=>[n("layout")]),_:1}),n(" frontmatter 来使用它们。")]),O])}const J=i(r,[["render",U],["__file","usage-of-client-config.html.vue"]]),K=JSON.parse('{"path":"/zh/advanced/cookbook/usage-of-client-config.html","title":"客户端配置的使用方法","lang":"zh-CN","frontmatter":{"icon":"fa6-solid:gear","description":"客户端配置的使用方法 你可以直接在你的项目中使用 。或者，在你的插件或者主题中，使用 Hook 来指定客户端配置文件的路径： 在客户端配置文件中，vuepress/client 提供了一个 函数来帮助你定义客户端配置： enhance enhance 函数既可以是同步的，也可以是异步的。它接收一个 Context 参数，包含以下属性： app 是由 c...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://vuejs.press/advanced/cookbook/usage-of-client-config.html"}],["meta",{"property":"og:url","content":"https://vuejs.press/zh/advanced/cookbook/usage-of-client-config.html"}],["meta",{"property":"og:site_name","content":"VuePress"}],["meta",{"property":"og:title","content":"客户端配置的使用方法"}],["meta",{"property":"og:description","content":"客户端配置的使用方法 你可以直接在你的项目中使用 。或者，在你的插件或者主题中，使用 Hook 来指定客户端配置文件的路径： 在客户端配置文件中，vuepress/client 提供了一个 函数来帮助你定义客户端配置： enhance enhance 函数既可以是同步的，也可以是异步的。它接收一个 Context 参数，包含以下属性： app 是由 c..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-02-02T14:23:03.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-02T14:23:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"客户端配置的使用方法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-02T14:23:03.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"enhance","slug":"enhance","link":"#enhance","children":[{"level":3,"title":"注册 Vue 组件","slug":"注册-vue-组件","link":"#注册-vue-组件","children":[]},{"level":3,"title":"使用不支持 SSR 的功能","slug":"使用不支持-ssr-的功能","link":"#使用不支持-ssr-的功能","children":[]},{"level":3,"title":"使用 Router 方法","slug":"使用-router-方法","link":"#使用-router-方法","children":[]}]},{"level":2,"title":"setup","slug":"setup","link":"#setup","children":[{"level":3,"title":"使用组合式 API","slug":"使用组合式-api","link":"#使用组合式-api","children":[]},{"level":3,"title":"使用不支持 SSR 的功能","slug":"使用不支持-ssr-的功能-1","link":"#使用不支持-ssr-的功能-1","children":[]}]},{"level":2,"title":"layouts","slug":"layouts","link":"#layouts","children":[]},{"level":2,"title":"rootComponents","slug":"rootcomponents","link":"#rootcomponents","children":[]}],"git":{"createdTime":1701614677000,"updatedTime":1706883783000,"contributors":[{"name":"Mr.Hope","email":"mister-hope@outlook.com","commits":2},{"name":"meteorlxy","email":"meteor.lxy@foxmail.com","commits":2}]},"readingTime":{"minutes":3.06,"words":919},"filePathRelative":"zh/advanced/cookbook/usage-of-client-config.md","localizedDate":"2023年12月3日","autoDesc":true}');export{J as comp,K as data};
