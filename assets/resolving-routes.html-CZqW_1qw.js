import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as c,c as i,a as n,b as s,d as a,w as t,e as o}from"./app-5nSivCWm.js";const r={},u=n("h1",{id:"解析路由",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#解析路由"},[n("span",null,"解析路由")])],-1),d=n("h2",{id:"获取全部路由",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#获取全部路由"},[n("span",null,"获取全部路由")])],-1),m=o(`<p><code>useRoutes</code> 的返回值是一个包含了所有路由信息的 Ref 对象。其属性是每条路由的路由路径，对应的值是路径的路由信息。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> useRoutes <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token function">useRoutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// {</span></span>
<span class="line"><span class="token comment">//   &#39;/&#39;: { meta: { title: &#39;Home&#39; }, loader: HomePageLoader },</span></span>
<span class="line"><span class="token comment">//   &#39;/404.html&#39;: { meta: { title: &#39;Not Found&#39; }, loader: NotFoundPageLoader },</span></span>
<span class="line"><span class="token comment">//   ...</span></span>
<span class="line"><span class="token comment">// }</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> routePaths <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>routes<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// =&gt; [’/‘, &#39;/404.html&#39;, &#39;/foo/&#39;, &#39;/bar/&#39;, ...]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="解析路由地址" tabindex="-1"><a class="header-anchor" href="#解析路由地址"><span>解析路由地址</span></a></h2>`,3),k=o(`<p><code>resolveRoutePath</code> 接收一个链接地址和一个可选的基础路径，返回一个解析后的路由地址:</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> resolveRoutePath <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> routePath <span class="token operator">=</span> <span class="token function">resolveRoutePath</span><span class="token punctuation">(</span><span class="token string">&#39;/foo/&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; &#39;/foo/&#39;</span></span>
<span class="line"><span class="token keyword">const</span> routePath <span class="token operator">=</span> <span class="token function">resolveRoutePath</span><span class="token punctuation">(</span><span class="token string">&#39;baz.html&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/foo/bar.html&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; &#39;/foo/baz.html&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="解析路由信息" tabindex="-1"><a class="header-anchor" href="#解析路由信息"><span>解析路由信息</span></a></h2>`,3),v=o(`<p><code>resolveRoute</code> 接收一个链接地址和一个可选的基础路径，返回一个解析后的路由信息:</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> resolveRoute <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> route <span class="token operator">=</span> <span class="token function">resolveRoute</span><span class="token punctuation">(</span><span class="token string">&#39;/foo/&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; { notFound: false, path: &#39;/foo/&#39;, meta: { title: &#39;Foo&#39; }, loader: FooPageLoader }</span></span>
<span class="line"><span class="token keyword">const</span> route <span class="token operator">=</span> <span class="token function">resolveRoute</span><span class="token punctuation">(</span><span class="token string">&#39;baz.html&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/foo/bar.html&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; { notFound: false, path: &#39;/foo/baz.html&#39;, meta: { title: &#39;Baz&#39; }, loader: BazPageLoader }</span></span>
<span class="line"><span class="token keyword">const</span> route <span class="token operator">=</span> <span class="token function">resolveRoute</span><span class="token punctuation">(</span><span class="token string">&#39;/not-exist.html&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; { notFound: true, path: &#39;/not-exist.html&#39;, meta: { title: &#39;Not Found&#39; }, loader: NotFoundPageLoader }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>路由信息中存在一个 <code>notFound</code> 字段，用于标识给定的路径是否存在对应的路由。当路由不存在时，返回值中的 <code>notFound</code> 字段为 <code>true</code>，其 <code>path</code> 字段为规范化后的路径，而 <code>meta</code> 和 <code>loader</code> 字段则会指向默认的 404 页面。</p>`,3);function h(g,f){const e=l("RouteLink");return c(),i("div",null,[u,d,n("p",null,[s("在开发主题和插件时，你可能希望获取所有页面的信息。通过 "),a(e,{to:"/zh/reference/client-api.html#useroutes"},{default:t(()=>[s("useRoutes")]),_:1}),s(" 就可以获取所有页面的路由记录。")]),m,n("p",null,[s("你可以使用 "),a(e,{to:"/zh/reference/client-api.html#resolveroutepath"},{default:t(()=>[s("resolveRoutePath")]),_:1}),s(" 来解析给定的链接对应的路由路径。")]),k,n("p",null,[s("你可以使用 "),a(e,{to:"/zh/reference/client-api.html#resolveroute"},{default:t(()=>[s("resolveRoute")]),_:1}),s(" 来解析给定的链接对应的路由信息。")]),v])}const _=p(r,[["render",h],["__file","resolving-routes.html.vue"]]),R=JSON.parse('{"path":"/zh/advanced/cookbook/resolving-routes.html","title":"解析路由","lang":"zh-CN","frontmatter":{"description":"解析路由 获取全部路由 在开发主题和插件时，你可能希望获取所有页面的信息。通过 就可以获取所有页面的路由记录。 useRoutes 的返回值是一个包含了所有路由信息的 Ref 对象。其属性是每条路由的路由路径，对应的值是路径的路由信息。 解析路由地址 你可以使用 来解析给定的链接对应的路由路径。 resolveRoutePath 接收一个链接地址和一个...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://vuejs.press/advanced/cookbook/resolving-routes.html"}],["meta",{"property":"og:url","content":"https://vuejs.press/zh/advanced/cookbook/resolving-routes.html"}],["meta",{"property":"og:site_name","content":"VuePress"}],["meta",{"property":"og:title","content":"解析路由"}],["meta",{"property":"og:description","content":"解析路由 获取全部路由 在开发主题和插件时，你可能希望获取所有页面的信息。通过 就可以获取所有页面的路由记录。 useRoutes 的返回值是一个包含了所有路由信息的 Ref 对象。其属性是每条路由的路由路径，对应的值是路径的路由信息。 解析路由地址 你可以使用 来解析给定的链接对应的路由路径。 resolveRoutePath 接收一个链接地址和一个..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-05-24T08:18:58.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-24T08:18:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"解析路由\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-24T08:18:58.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"获取全部路由","slug":"获取全部路由","link":"#获取全部路由","children":[]},{"level":2,"title":"解析路由地址","slug":"解析路由地址","link":"#解析路由地址","children":[]},{"level":2,"title":"解析路由信息","slug":"解析路由信息","link":"#解析路由信息","children":[]}],"git":{"createdTime":1716538738000,"updatedTime":1716538738000,"contributors":[{"name":"Mister-Hope","email":"mister-hope@outlook.com","commits":1}]},"readingTime":{"minutes":1.34,"words":403},"filePathRelative":"zh/advanced/cookbook/resolving-routes.md","localizedDate":"2024年5月24日","autoDesc":true}');export{_ as comp,R as data};
