import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as i,c,a as n,b as s,d as e,w as t,e as p}from"./app-5nSivCWm.js";const r={},u=n("h1",{id:"开发插件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#开发插件"},[n("span",null,"开发插件")])],-1),d={class:"hint-container tip"},m=n("p",{class:"hint-container-title"},"提示",-1),v=n("h2",{id:"创建一个插件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#创建一个插件"},[n("span",null,"创建一个插件")])],-1),k=n("em",null,"插件对象",-1),h=p(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">const</span> fooPlugin <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  name<span class="token operator">:</span> <span class="token string">&#39;vuepress-plugin-foo&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),g=n("em",null,"插件对象",-1),b=n("em",null,"插件函数",-1),_=p(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">const</span> <span class="token function-variable function">barPlugin</span> <span class="token operator">=</span> <span class="token punctuation">(</span>app<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    name<span class="token operator">:</span> <span class="token string">&#39;vuepress-plugin-bar&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>插件通常需要允许用户传入配置，因此我们一般都会提供给用户一个函数来接收配置，然后将 <em>插件对象</em> 或者 <em>插件函数</em> 作为返回值。于是，你的插件应该转换成这样的形式：</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">const</span> <span class="token function-variable function">fooPlugin</span> <span class="token operator">=</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    name<span class="token operator">:</span> <span class="token string">&#39;vuepress-plugin-foo&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">barPlugin</span> <span class="token operator">=</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span>app<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">      name<span class="token operator">:</span> <span class="token string">&#39;vuepress-plugin-bar&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token comment">// ...</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="发布到-npm" tabindex="-1"><a class="header-anchor" href="#发布到-npm"><span>发布到 NPM</span></a></h2><p>在创建了插件之后，你需要在 <a href="https://docs.npmjs.com/cli/v8/configuring-npm/package-json" target="_blank" rel="noopener noreferrer">package.json</a> 文件中遵循一定的约定，然后再将其发布到 NPM 上：</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vuepress-plugin-foo&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;keywords&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;vuepress-plugin&quot;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),f=n("code",null,"name",-1),y=n("code",null,"vuepress-plugin-xxx",-1),x=n("code",null,"@org/vuepress-plugin-xxx",-1),P=n("em",null,"插件对象",-1),w=n("li",null,[s("在 "),n("code",null,"keywords"),s(" 中包含 "),n("code",null,"vuepress-plugin"),s(" ，这样用户可以在 NPM 上搜索到你的插件。")],-1);function N(j,z){const a=o("RouteLink");return i(),c("div",null,[u,n("div",d,[m,n("p",null,[s("在阅读该指南之前，你最好先了解一下 VuePress 的 "),e(a,{to:"/zh/advanced/architecture.html"},{default:t(()=>[s("架构")]),_:1}),s(" 。")])]),v,n("p",null,[s("插件是一个符合 "),e(a,{to:"/zh/reference/plugin-api.html"},{default:t(()=>[s("插件 API")]),_:1}),s(" 的普通 JavaScript 对象，称之为 "),k,s(" ：")]),h,n("p",null,[s("插件还可以是一个接收 "),e(a,{to:"/zh/reference/node-api.html#app"},{default:t(()=>[s("App 实例")]),_:1}),s(" 作为参数，且返回值为 "),g,s(" 的函数，称之为 "),b,s(" ：")]),_,n("ul",null,[n("li",null,[s("将 "),f,s(" 按照约定命名，即 "),y,s(" 或 "),x,s(" ，它应该和 "),P,s(" 的 "),e(a,{to:"/zh/reference/plugin-api.html#name"},{default:t(()=>[s("name")]),_:1}),s(" 字段保持一致。")]),w])])}const T=l(r,[["render",N],["__file","plugin.html.vue"]]),M=JSON.parse('{"path":"/zh/advanced/plugin.html","title":"开发插件","lang":"zh-CN","frontmatter":{"icon":"fa6-solid:plug","description":"开发插件 提示 在阅读该指南之前，你最好先了解一下 VuePress 的 。 创建一个插件 插件是一个符合 的普通 JavaScript 对象，称之为 插件对象 ： 插件还可以是一个接收 作为参数，且返回值为 插件对象 的函数，称之为 插件函数 ： 插件通常需要允许用户传入配置，因此我们一般都会提供给用户一个函数来接收配置，然后将 插件对象 或者 插件...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://vuejs.press/advanced/plugin.html"}],["meta",{"property":"og:url","content":"https://vuejs.press/zh/advanced/plugin.html"}],["meta",{"property":"og:site_name","content":"VuePress"}],["meta",{"property":"og:title","content":"开发插件"}],["meta",{"property":"og:description","content":"开发插件 提示 在阅读该指南之前，你最好先了解一下 VuePress 的 。 创建一个插件 插件是一个符合 的普通 JavaScript 对象，称之为 插件对象 ： 插件还可以是一个接收 作为参数，且返回值为 插件对象 的函数，称之为 插件函数 ： 插件通常需要允许用户传入配置，因此我们一般都会提供给用户一个函数来接收配置，然后将 插件对象 或者 插件..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-02-02T14:23:03.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-02T14:23:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"开发插件\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-02T14:23:03.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"创建一个插件","slug":"创建一个插件","link":"#创建一个插件","children":[]},{"level":2,"title":"发布到 NPM","slug":"发布到-npm","link":"#发布到-npm","children":[]}],"git":{"createdTime":1701614677000,"updatedTime":1706883783000,"contributors":[{"name":"Mr.Hope","email":"mister-hope@outlook.com","commits":2},{"name":"meteorlxy","email":"meteor.lxy@foxmail.com","commits":1}]},"readingTime":{"minutes":1.11,"words":332},"filePathRelative":"zh/advanced/plugin.md","localizedDate":"2023年12月3日","autoDesc":true}');export{T as comp,M as data};
