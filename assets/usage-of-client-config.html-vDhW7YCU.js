import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as l,c as u,a as s,b as n,d as a,w as t,e as o}from"./app-BhtAeQQz.js";const r={},d=s("h1",{id:"usage-of-client-config",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#usage-of-client-config"},[s("span",null,"Usage of Client Config")])],-1),k=o(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> getDirname<span class="token punctuation">,</span> path <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/utils&#39;</span>

<span class="token keyword">const</span> __dirname <span class="token operator">=</span> <span class="token function">getDirname</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span>

<span class="token keyword">const</span> pluginOrTheme <span class="token operator">=</span> <span class="token punctuation">{</span>
  clientConfigFile<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./path/to/clientConfig.ts&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),m=s("code",null,"vuepress/client",-1),v=o(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">enhance</span><span class="token punctuation">(</span><span class="token punctuation">{</span> app<span class="token punctuation">,</span> router<span class="token punctuation">,</span> siteData <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  layouts<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  rootComponents<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="enhance" tabindex="-1"><a class="header-anchor" href="#enhance"><span>enhance</span></a></h2><p>The <code>enhance</code> function could be either synchronous or asynchronous. It accepts a context param with following properties:</p>`,3),f=s("code",null,"app",-1),h={href:"https://vuejs.org/api/application.html#createapp",target:"_blank",rel:"noopener noreferrer"},g=s("code",null,"router",-1),y={href:"https://router.vuejs.org/api/#createrouter",target:"_blank",rel:"noopener noreferrer"},b=s("code",null,"siteData",-1),_=s("p",null,[n("The "),s("code",null,"enhance"),n(" function will be invoked after the client app is created. It's possible to implement any enhancements to the Vue application.")],-1),w=s("h3",{id:"register-vue-components",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#register-vue-components"},[s("span",null,"Register Vue Components")])],-1),C={href:"https://vuejs.org/api/application.html#app-component",target:"_blank",rel:"noopener noreferrer"},x=o(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>
<span class="token keyword">import</span> MyComponent <span class="token keyword">from</span> <span class="token string">&#39;./MyComponent.vue&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">enhance</span><span class="token punctuation">(</span><span class="token punctuation">{</span> app <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;MyComponent&#39;</span><span class="token punctuation">,</span> MyComponent<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="use-non-ssr-friendly-features" tabindex="-1"><a class="header-anchor" href="#use-non-ssr-friendly-features"><span>Use Non-SSR-Friendly Features</span></a></h3><p>VuePress will generate a SSR application to pre-render pages during build. Generally speaking, if a code snippet is using Browser / DOM APIs before client app is mounted, we call it non-SSR-friendly.</p>`,3),S=s("code",null,"enhance",-1),R=s("code",null,"__VUEPRESS_SSR__",-1),U=o(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token keyword">async</span> <span class="token function">enhance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>__VUEPRESS_SSR__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> nonSsrFriendlyModule <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;non-ssr-friendly-module&#39;</span><span class="token punctuation">)</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="use-router-methods" tabindex="-1"><a class="header-anchor" href="#use-router-methods"><span>Use Router Methods</span></a></h3>`,2),M={href:"https://router.vuejs.org/api/#router-methods",target:"_blank",rel:"noopener noreferrer"},I=o(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">enhance</span><span class="token punctuation">(</span><span class="token punctuation">{</span> router <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;before navigation&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    router<span class="token punctuation">.</span><span class="token function">afterEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;after navigation&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>It&#39;s not recommended to use <code>addRoute</code> method to add dynamic routes here, because those routes will <strong>NOT</strong> be pre-rendered in build mode.</p><p>But you can still do that if you understand the drawback.</p></div><h2 id="setup" tabindex="-1"><a class="header-anchor" href="#setup"><span>setup</span></a></h2>`,3),T=s("code",null,"setup",-1),j={href:"https://vuejs.org/api/composition-api-setup.html",target:"_blank",rel:"noopener noreferrer"},V=s("h3",{id:"use-composition-api",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#use-composition-api"},[s("span",null,"Use Composition API")])],-1),P=s("code",null,"setup",-1),F={href:"https://vuejs.org/api/composition-api-setup.html",target:"_blank",rel:"noopener noreferrer"},E=o(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> provide<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useRoute<span class="token punctuation">,</span> useRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// get the current route location</span>
    <span class="token keyword">const</span> route <span class="token operator">=</span> <span class="token function">useRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// get the vue-router instance</span>
    <span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// provide a value that can be injected by layouts, pages and other components</span>
    <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token function">provide</span><span class="token punctuation">(</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">,</span> count<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="use-non-ssr-friendly-features-1" tabindex="-1"><a class="header-anchor" href="#use-non-ssr-friendly-features-1"><span>Use Non-SSR-Friendly Features</span></a></h3>`,2),N=s("code",null,"setup",-1),A=s("code",null,"__VUEPRESS_SSR__",-1),D={href:"https://vuejs.org/api/composition-api-lifecycle.html#onmounted",target:"_blank",rel:"noopener noreferrer"},L=o(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// use DOM API after mounted</span>
      document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="layouts" tabindex="-1"><a class="header-anchor" href="#layouts"><span>layouts</span></a></h2>`,2),O=s("code",null,"layouts",-1),Y=o(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>
<span class="token keyword">import</span> MyLayout <span class="token keyword">from</span> <span class="token string">&#39;./layouts/MyLayout.vue&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  layouts<span class="token operator">:</span> <span class="token punctuation">{</span>
    MyLayout<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="rootcomponents" tabindex="-1"><a class="header-anchor" href="#rootcomponents"><span>rootComponents</span></a></h2><p>The <code>rootComponents</code> is a components array to be placed directly into the root node of the client vue app.</p><p>Typical usage of this option is to put some global UI components, like global popup or so:</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>
<span class="token keyword">import</span> GlobalPopup <span class="token keyword">from</span> <span class="token string">&#39;./components/GlobalPopup.vue&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  rootComponents<span class="token operator">:</span> <span class="token punctuation">[</span>GlobalPopup<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function B(z,G){const e=i("RouteLink"),p=i("ExternalLinkIcon");return l(),u("div",null,[d,s("p",null,[n("You can make use of the "),a(e,{to:"/guide/configuration.html#client-config-file"},{default:t(()=>[n("client config file")]),_:1}),n(" directly in your project, or specify the file path in your plugin or theme via "),a(e,{to:"/reference/plugin-api.html#clientconfigfile"},{default:t(()=>[n("clientConfigFile")]),_:1}),n(" hook:")]),k,s("p",null,[n("Inside the client config file, "),m,n(" provides a helper function "),a(e,{to:"/reference/client-api.html#defineclientconfig"},{default:t(()=>[n("defineClientConfig")]),_:1}),n(" to help you define the client config:")]),v,s("ul",null,[s("li",null,[f,n(" is the Vue application instance that created by "),s("a",h,[n("createApp"),a(p)]),n(".")]),s("li",null,[g,n(" is the Vue Router instance that created by "),s("a",y,[n("createRouter"),a(p)]),n(".")]),s("li",null,[b,n(" is a ref of an object that generated from user config, including "),a(e,{to:"/reference/config.html#base"},{default:t(()=>[n("base")]),_:1}),n(", "),a(e,{to:"/reference/config.html#lang"},{default:t(()=>[n("lang")]),_:1}),n(", "),a(e,{to:"/reference/config.html#title"},{default:t(()=>[n("title")]),_:1}),n(", "),a(e,{to:"/reference/config.html#description"},{default:t(()=>[n("description")]),_:1}),n(", "),a(e,{to:"/reference/config.html#head"},{default:t(()=>[n("head")]),_:1}),n(" and "),a(e,{to:"/reference/config.html#locales"},{default:t(()=>[n("locales")]),_:1}),n(".")])]),_,w,s("p",null,[n("You can register global Vue components via the "),s("a",C,[n("app.component"),a(p)]),n(" method:")]),x,s("p",null,[n("We already provides a "),a(e,{to:"/reference/components.html#clientonly"},{default:t(()=>[n("ClientOnly")]),_:1}),n(" component to wrap non-SSR-friendly content.")]),s("p",null,[n("In the "),S,n(" function, you can make use of the "),a(e,{to:"/reference/client-api.html#ssr"},{default:t(()=>[R]),_:1}),n(" flag for that purpose.")]),U,s("p",null,[n("You can make use of the "),s("a",M,[n("Router Methods"),a(p)]),n(" that provided by vue-router. For example, add navigation guard:")]),I,s("p",null,[n("The "),T,n(" function would be invoked inside the "),s("a",j,[n("setup"),a(p)]),n(" hook of the client vue app.")]),V,s("p",null,[n("You can take the "),P,n(" function as part of the "),s("a",F,[n("setup"),a(p)]),n(" hook of the root component. Thus, all composition APIs are available here.")]),E,s("p",null,[n("In the "),N,n(" function, the "),a(e,{to:"/reference/client-api.html#ssr"},{default:t(()=>[A]),_:1}),n(" flag is also available.")]),s("p",null,[n("Another way to use non-ssr-friendly features is to put them inside the "),s("a",D,[n("onMounted"),a(p)]),n(" hook:")]),L,s("p",null,[n("The "),O,n(" options is to set layout components. After layout components are registered here, users can use it via "),a(e,{to:"/reference/frontmatter.html#layout"},{default:t(()=>[n("layout")]),_:1}),n(" frontmatter.")]),Y])}const q=c(r,[["render",B],["__file","usage-of-client-config.html.vue"]]),H=JSON.parse('{"path":"/advanced/cookbook/usage-of-client-config.html","title":"Usage of Client Config","lang":"en-US","frontmatter":{"icon":"fa6-solid:gear","description":"Usage of Client Config You can make use of the directly in your project, or specify the file path in your plugin or theme via hook: Inside the client config file, vuepress/clien...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://vuejs.press/zh/advanced/cookbook/usage-of-client-config.html"}],["meta",{"property":"og:url","content":"https://vuejs.press/advanced/cookbook/usage-of-client-config.html"}],["meta",{"property":"og:site_name","content":"VuePress"}],["meta",{"property":"og:title","content":"Usage of Client Config"}],["meta",{"property":"og:description","content":"Usage of Client Config You can make use of the directly in your project, or specify the file path in your plugin or theme via hook: Inside the client config file, vuepress/clien..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-02T14:23:03.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-02T14:23:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Usage of Client Config\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-02T14:23:03.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"enhance","slug":"enhance","link":"#enhance","children":[{"level":3,"title":"Register Vue Components","slug":"register-vue-components","link":"#register-vue-components","children":[]},{"level":3,"title":"Use Non-SSR-Friendly Features","slug":"use-non-ssr-friendly-features","link":"#use-non-ssr-friendly-features","children":[]},{"level":3,"title":"Use Router Methods","slug":"use-router-methods","link":"#use-router-methods","children":[]}]},{"level":2,"title":"setup","slug":"setup","link":"#setup","children":[{"level":3,"title":"Use Composition API","slug":"use-composition-api","link":"#use-composition-api","children":[]},{"level":3,"title":"Use Non-SSR-Friendly Features","slug":"use-non-ssr-friendly-features-1","link":"#use-non-ssr-friendly-features-1","children":[]}]},{"level":2,"title":"layouts","slug":"layouts","link":"#layouts","children":[]},{"level":2,"title":"rootComponents","slug":"rootcomponents","link":"#rootcomponents","children":[]}],"git":{"createdTime":1701614677000,"updatedTime":1706883783000,"contributors":[{"name":"Mr.Hope","email":"mister-hope@outlook.com","commits":2},{"name":"meteorlxy","email":"meteor.lxy@foxmail.com","commits":2}]},"readingTime":{"minutes":2.21,"words":663},"filePathRelative":"advanced/cookbook/usage-of-client-config.md","localizedDate":"December 3, 2023","autoDesc":true}');export{q as comp,H as data};
