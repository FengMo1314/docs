import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as i,c as u,a as n,b as s,d as a,w as t,e as o}from"./app-BhtAeQQz.js";const d={},r=n("h1",{id:"开发主题",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#开发主题"},[n("span",null,"开发主题")])],-1),m={class:"hint-container tip"},k=n("p",{class:"hint-container-title"},"提示",-1),v=n("h2",{id:"创建一个主题",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#创建一个主题"},[n("span",null,"创建一个主题")])],-1),h=n("em",null,"主题对象",-1),g=n("em",null,"主题函数",-1),b=o(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> getDirname<span class="token punctuation">,</span> path <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/utils&#39;</span>

<span class="token keyword">const</span> __dirname <span class="token operator">=</span> <span class="token function">getDirname</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token function-variable function">fooTheme</span> <span class="token operator">=</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 返回一个主题对象</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;vuepress-theme-foo&#39;</span><span class="token punctuation">,</span>

    <span class="token comment">// 主题的客户端配置文件的路径</span>
    clientConfigFile<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;client.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

    <span class="token comment">// 设置自定义 dev / build 模板</span>
    <span class="token comment">// 如果没有指定模板，将会使用默认模板</span>
    templateBuild<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;templates/build.html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    templateDev<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;templates/dev.html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

    <span class="token comment">// 使用插件</span>
    plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>

    <span class="token comment">// 其他的插件 API 也都可用</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">barTheme</span> <span class="token operator">=</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 返回一个主题函数</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>app<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      name<span class="token operator">:</span> <span class="token string">&#39;vuepress-theme-bar&#39;</span><span class="token punctuation">,</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，创建主题的客户端配置文件 <code>client.js</code> :</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span>
<span class="token keyword">import</span> Layout <span class="token keyword">from</span> <span class="token string">&#39;./layouts/Layout.vue&#39;</span>
<span class="token keyword">import</span> NotFound <span class="token keyword">from</span> <span class="token string">&#39;./layouts/NotFound.vue&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  layouts<span class="token operator">:</span> <span class="token punctuation">{</span>
    Layout<span class="token punctuation">,</span>
    NotFound<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>layouts</code> 字段声明了你的主题提供的布局。一个主题必须提供至少两个布局：<code>Layout</code> 和 <code>NotFound</code> 。前者用于提供一般页面的默认布局，后者用于提供 404 页面的布局。</p>`,4),_=n("code",null,"Layout",-1),f=o(`<div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>NotFound</code> 布局会被用于 <code>404.html</code> 页面：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>404 Not Found<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),y=n("h2",{id:"发布到-npm",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#发布到-npm"},[n("span",null,"发布到 NPM")])],-1),x={href:"https://docs.npmjs.com/cli/v8/configuring-npm/package-json",target:"_blank",rel:"noopener noreferrer"},w=o(`<div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vuepress-theme-foo&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;keywords&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;vuepress-theme&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),N=n("code",null,"name",-1),j=n("code",null,"vuepress-theme-xxx",-1),z=n("code",null,"@org/vuepress-theme-xxx",-1),C=n("em",null,"主题对象",-1),P=n("li",null,[s("在 "),n("code",null,"keywords"),s(" 中包含 "),n("code",null,"vuepress-theme"),s(" ，这样用户可以在 NPM 上搜索到你的主题。")],-1);function L(T,q){const e=p("RouteLink"),l=p("ExternalLinkIcon");return i(),u("div",null,[r,n("div",m,[k,n("p",null,[s("在阅读该指南之前，你最好先了解一下 "),a(e,{to:"/zh/advanced/plugin.html"},{default:t(()=>[s("开发插件")]),_:1}),s(" 指南。")])]),v,n("p",null,[s("VuePress 主题是一个特殊的插件，它应该符合 "),a(e,{to:"/zh/reference/theme-api.html"},{default:t(()=>[s("主题 API")]),_:1}),s(" 。和插件一样，主题可以是一个 "),h,s(" 或一个 "),g,s(" ，并且通常通过一个函数来接收配置项：")]),b,n("p",null,[_,s(" 布局应该包含 "),a(e,{to:"/zh/reference/components.html#content"},{default:t(()=>[s("Content")]),_:1}),s(" 组件来展示 Markdown 内容：")]),f,n("p",null,[s("你可以提供多个布局，用户可以通过 "),a(e,{to:"/zh/reference/frontmatter.html#layout"},{default:t(()=>[s("layout")]),_:1}),s(" Frontmatter 来修改布局。")]),y,n("p",null,[s("同样的，对于主题也有 "),n("a",x,[s("package.json"),a(l)]),s(" 相关的约定：")]),w,n("ul",null,[n("li",null,[s("将 "),N,s(" 按照约定命名： "),j,s(" 或 "),z,s(" ，它应该和 "),C,s(" 的 "),a(e,{to:"/zh/reference/theme-api.html#name"},{default:t(()=>[s("name")]),_:1}),s(" 字段保持一致。")]),P])])}const M=c(d,[["render",L],["__file","theme.html.vue"]]),D=JSON.parse('{"path":"/zh/advanced/theme.html","title":"开发主题","lang":"zh-CN","frontmatter":{"icon":"fa6-solid:palette","description":"开发主题 提示 在阅读该指南之前，你最好先了解一下 指南。 创建一个主题 VuePress 主题是一个特殊的插件，它应该符合 。和插件一样，主题可以是一个 主题对象 或一个 主题函数 ，并且通常通过一个函数来接收配置项： 然后，创建主题的客户端配置文件 client.js : layouts 字段声明了你的主题提供的布局。一个主题必须提供至少两个布局：...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://vuejs.press/advanced/theme.html"}],["meta",{"property":"og:url","content":"https://vuejs.press/zh/advanced/theme.html"}],["meta",{"property":"og:site_name","content":"VuePress"}],["meta",{"property":"og:title","content":"开发主题"}],["meta",{"property":"og:description","content":"开发主题 提示 在阅读该指南之前，你最好先了解一下 指南。 创建一个主题 VuePress 主题是一个特殊的插件，它应该符合 。和插件一样，主题可以是一个 主题对象 或一个 主题函数 ，并且通常通过一个函数来接收配置项： 然后，创建主题的客户端配置文件 client.js : layouts 字段声明了你的主题提供的布局。一个主题必须提供至少两个布局：..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-02-02T14:23:03.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-02T14:23:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"开发主题\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-02T14:23:03.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"创建一个主题","slug":"创建一个主题","link":"#创建一个主题","children":[]},{"level":2,"title":"发布到 NPM","slug":"发布到-npm","link":"#发布到-npm","children":[]}],"git":{"createdTime":1701614677000,"updatedTime":1706883783000,"contributors":[{"name":"Mr.Hope","email":"mister-hope@outlook.com","commits":2},{"name":"meteorlxy","email":"meteor.lxy@foxmail.com","commits":2}]},"readingTime":{"minutes":1.58,"words":473},"filePathRelative":"zh/advanced/theme.md","localizedDate":"2023年12月3日","autoDesc":true}');export{M as comp,D as data};
