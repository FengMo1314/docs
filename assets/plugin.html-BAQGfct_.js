import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as r,a as e,b as n,d as s,w as t,e as i}from"./app-BhtAeQQz.js";const u={},d=e("h1",{id:"writing-a-plugin",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#writing-a-plugin"},[e("span",null,"Writing a Plugin")])],-1),m={class:"hint-container tip"},g=e("p",{class:"hint-container-title"},"Tips",-1),h=e("h2",{id:"create-a-plugin",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#create-a-plugin"},[e("span",null,"Create a Plugin")])],-1),v=e("em",null,"Plugin Object",-1),k=i(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> fooPlugin <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;vuepress-plugin-foo&#39;</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),b=e("em",null,"Plugin Object",-1),f=e("em",null,"Plugin Function",-1),_=i(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">barPlugin</span> <span class="token operator">=</span> <span class="token punctuation">(</span>app<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;vuepress-plugin-bar&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A plugin usually needs to allow user options, so we typically provide users with a function to receive options, and returns a <em>Plugin Object</em> or a <em>Plugin Function</em>. Then your plugin should be converted like this:</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">fooPlugin</span> <span class="token operator">=</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;vuepress-plugin-foo&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">barPlugin</span> <span class="token operator">=</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>app<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      name<span class="token operator">:</span> <span class="token string">&#39;vuepress-plugin-bar&#39;</span><span class="token punctuation">,</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="publish-to-npm" tabindex="-1"><a class="header-anchor" href="#publish-to-npm"><span>Publish to NPM</span></a></h2>`,4),y={href:"https://docs.npmjs.com/cli/v8/configuring-npm/package-json",target:"_blank",rel:"noopener noreferrer"},P=i(`<div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vuepress-plugin-foo&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;keywords&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;vuepress-plugin&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),w=e("code",null,"name",-1),x=e("code",null,"vuepress-plugin-xxx",-1),j=e("code",null,"@org/vuepress-plugin-xxx",-1),T=e("em",null,"Plugin Object",-1),N=e("li",null,[n("Set "),e("code",null,"keywords"),n(" to include "),e("code",null,"vuepress-plugin"),n(", so that users can search your plugin on NPM.")],-1);function S(q,A){const a=o("RouteLink"),l=o("ExternalLinkIcon");return c(),r("div",null,[d,e("div",m,[g,e("p",null,[n("Before reading this guide, you'd better learn the VuePress "),s(a,{to:"/advanced/architecture.html"},{default:t(()=>[n("architecture")]),_:1}),n(" first.")])]),h,e("p",null,[n("A plugin should be a plain JavaScript object that satisfies the "),s(a,{to:"/reference/plugin-api.html"},{default:t(()=>[n("Plugin API")]),_:1}),n(", which is called a "),v,n(":")]),k,e("p",null,[n("A plugin could also be a function that receives the "),s(a,{to:"/reference/node-api.html#app"},{default:t(()=>[n("app instance")]),_:1}),n(" as the param and returns a "),b,n(", which is called a "),f,n(":")]),_,e("p",null,[n("After creating a plugin, you should follow some conventions in the "),e("a",y,[n("package.json"),s(l)]),n(" file before publishing it to NPM:")]),P,e("ul",null,[e("li",null,[n("Set "),w,n(" to follow the naming convention, i.e. "),x,n(" or "),j,n(", which should be consistent with the "),s(a,{to:"/reference/plugin-api.html#name"},{default:t(()=>[n("name")]),_:1}),n(" field of the "),T,n(".")]),N])])}const B=p(u,[["render",S],["__file","plugin.html.vue"]]),M=JSON.parse(`{"path":"/advanced/plugin.html","title":"Writing a Plugin","lang":"en-US","frontmatter":{"icon":"fa6-solid:plug","description":"Writing a Plugin Tips Before reading this guide, you'd better learn the VuePress first. Create a Plugin A plugin should be a plain JavaScript object that satisfies the , which i...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://vuejs.press/zh/advanced/plugin.html"}],["meta",{"property":"og:url","content":"https://vuejs.press/advanced/plugin.html"}],["meta",{"property":"og:site_name","content":"VuePress"}],["meta",{"property":"og:title","content":"Writing a Plugin"}],["meta",{"property":"og:description","content":"Writing a Plugin Tips Before reading this guide, you'd better learn the VuePress first. Create a Plugin A plugin should be a plain JavaScript object that satisfies the , which i..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-02T14:23:03.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-02T14:23:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Writing a Plugin\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-02T14:23:03.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Create a Plugin","slug":"create-a-plugin","link":"#create-a-plugin","children":[]},{"level":2,"title":"Publish to NPM","slug":"publish-to-npm","link":"#publish-to-npm","children":[]}],"git":{"createdTime":1701614677000,"updatedTime":1706883783000,"contributors":[{"name":"Mr.Hope","email":"mister-hope@outlook.com","commits":2},{"name":"meteorlxy","email":"meteor.lxy@foxmail.com","commits":1}]},"readingTime":{"minutes":0.77,"words":231},"filePathRelative":"advanced/plugin.md","localizedDate":"December 3, 2023","autoDesc":true}`);export{B as comp,M as data};
