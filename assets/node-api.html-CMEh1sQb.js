import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as c,c as d,a as n,d as e,w as t,b as a,e as l}from"./app-BhtAeQQz.js";const r={},u=n("h1",{id:"node-api",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#node-api"},[n("span",null,"Node API")])],-1),h=n("p",null,[a("Node API 可以通过 "),n("code",null,"vuepress/core"),a(" 来引入。")],-1),k=n("h2",{id:"app",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#app"},[n("span",null,"App")])],-1),v=l(`<p><code>BuildApp</code> 和 <code>DevApp</code> 除了 <a href="#build">build</a> 和 <a href="#dev">dev</a> 方法外，拥有一样的属性和方法。</p><h3 id="createbuildapp" tabindex="-1"><a class="header-anchor" href="#createbuildapp"><span>createBuildApp</span></a></h3><ul><li>函数签名：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">createBuildApp</span><span class="token operator">:</span> <span class="token punctuation">(</span>config<span class="token operator">:</span> AppConfig<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> BuildApp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>参数：</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>config</td><td><code>AppConfig</code></td><td>创建 VuePress App 的选项。</td></tr></tbody></table><ul><li><p>详情：</p><p>创建一个 Build 模式的 App 实例，用于构建静态文件。</p></li><li><p>示例：</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">build</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createBuildApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// ...配置项</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token comment">// 初始化和准备</span>
  <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment">// 构建</span>
  <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment">// 处理 onGenerated hook</span>
  <span class="token keyword">await</span> app<span class="token punctuation">.</span>pluginApi<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>onGenerated<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参考： <ul><li><a href="#build">Node API &gt; App 方法 &gt; build</a></li></ul></li></ul><h3 id="createdevapp" tabindex="-1"><a class="header-anchor" href="#createdevapp"><span>createDevApp</span></a></h3><ul><li>函数签名：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">createDevApp</span><span class="token operator">:</span> <span class="token punctuation">(</span>config<span class="token operator">:</span> AppConfig<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> DevApp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>参数：</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>config</td><td><code>AppConfig</code></td><td>创建 VuePress App 的选项。</td></tr></tbody></table><ul><li><p>详情：</p><p>创建一个 Dev 模式的 App 实例，用于启动开发服务器。</p></li><li><p>示例：</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">dev</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createDevApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// ...配置项</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token comment">// 初始化和准备</span>
  <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment">// 启动开发服务器</span>
  <span class="token keyword">const</span> closeDevServer <span class="token operator">=</span> <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">dev</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment">// 准备文件监听器</span>
  <span class="token keyword">const</span> watchers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

  <span class="token comment">// 重启开发服务器</span>
  <span class="token keyword">const</span> <span class="token function-variable function">restart</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
      <span class="token comment">// 关闭所有监听器</span>
      <span class="token operator">...</span>watchers<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token comment">// 关闭当前的开发服务器</span>
      <span class="token function">closeDevServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> <span class="token function">dev</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 处理 onWatched hook</span>
  <span class="token keyword">await</span> app<span class="token punctuation">.</span>pluginApi<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>onWatched<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> watchers<span class="token punctuation">,</span> restart<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参考： <ul><li><a href="#dev">Node API &gt; App 方法 &gt; dev</a></li></ul></li></ul><h2 id="app-属性" tabindex="-1"><a class="header-anchor" href="#app-属性"><span>App 属性</span></a></h2><h3 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options</span></a></h3><ul><li><p>类型： <code>AppOptions</code></p></li><li><p>详情：</p><p>VuePress App 的配置项。</p><p>这些配置项来自于 <a href="#createbuildapp">createBuildApp</a> / <a href="#createdevapp">createDevApp</a> 的 <code>config</code> 参数，但所有可选的字段都填充上了默认值。</p></li></ul><h3 id="sitedata" tabindex="-1"><a class="header-anchor" href="#sitedata"><span>siteData</span></a></h3>`,21),m=n("li",null,[n("p",null,[a("类型： "),n("code",null,"SiteData")])],-1),g=n("p",null,"详情：",-1),b=l('<h3 id="version" tabindex="-1"><a class="header-anchor" href="#version"><span>version</span></a></h3><ul><li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>VuePress App 的版本，即 <code>@vuepress/core</code> 包的版本。</p></li></ul><h3 id="env-isbuild" tabindex="-1"><a class="header-anchor" href="#env-isbuild"><span>env.isBuild</span></a></h3><ul><li><p>类型： <code>boolean</code></p></li><li><p>详情：</p><p>用于判断 App 是否运行在 Build 模式的环境标记，即当前 App 是否是 <a href="#createbuildapp">BuildApp</a> 实例。</p></li></ul><h3 id="env-isdev" tabindex="-1"><a class="header-anchor" href="#env-isdev"><span>env.isDev</span></a></h3><ul><li><p>类型： <code>boolean</code></p></li><li><p>详情：</p><p>用于判断 App 是否运行在 Dev 模式的环境标记，即当前 App 是否是 <a href="#createdevapp">DevApp</a> 实例。</p></li></ul><h3 id="env-isdebug" tabindex="-1"><a class="header-anchor" href="#env-isdebug"><span>env.isDebug</span></a></h3><ul><li><p>类型： <code>boolean</code></p></li><li><p>详情：</p><p>用于判断 App 是否开启 Debug 模式的环境标记。</p></li></ul><h3 id="markdown" tabindex="-1"><a class="header-anchor" href="#markdown"><span>markdown</span></a></h3>',9),f=n("li",null,[n("p",null,[a("类型： "),n("code",null,"MarkdownIt")])],-1),_=n("p",null,"详情：",-1),w={href:"https://github.com/markdown-it/markdown-it",target:"_blank",rel:"noopener noreferrer"},y=n("h3",{id:"pages",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pages"},[n("span",null,"pages")])],-1),P=n("li",null,[n("p",null,[a("类型： "),n("code",null,"Page[]")])],-1),A=n("p",null,"详情：",-1),x=n("p",null,[n("a",{href:"#page"},"Page"),a(" 对象数组。")],-1),B=l(`<h2 id="app-方法" tabindex="-1"><a class="header-anchor" href="#app-方法"><span>App 方法</span></a></h2><h3 id="dir" tabindex="-1"><a class="header-anchor" href="#dir"><span>dir</span></a></h3><ul><li><p>工具函数：</p><ul><li><code>dir.cache()</code>： 解析至缓存目录</li><li><code>dir.temp()</code>： 解析至临时文件目录</li><li><code>dir.source()</code>： 解析至源文件目录</li><li><code>dir.dest()</code>： 解析至输出目录</li><li><code>dir.client()</code>： 解析至 <code>@vuepress/client</code> 目录</li><li><code>dir.public()</code>： 解析至 Public 文件目录</li></ul></li><li><p>函数签名：</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">AppDirFunction</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>详情：</p><p>用于解析对应目录下的文件绝对路径的一些工具函数。</p><p>如果你不传入任何参数，就会返回对应目录的绝对路径。</p></li><li><p>示例：</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token comment">// 解析 \`\${sourceDir}/README.md\` 文件的绝对路径</span>
<span class="token keyword">const</span> homeSourceFile <span class="token operator">=</span> app<span class="token punctuation">.</span>dir<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span><span class="token string">&#39;README.md&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="writetemp" tabindex="-1"><a class="header-anchor" href="#writetemp"><span>writeTemp</span></a></h3><ul><li>函数签名：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token function">writeTemp</span><span class="token punctuation">(</span>file<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> content<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>参数：</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>file</td><td><code>string</code></td><td>要写入的临时文件的路径，相对于临时文件目录。</td></tr><tr><td>content</td><td><code>string</code></td><td>要写入的临时文件路径的内容。</td></tr></tbody></table><ul><li><p>详情：</p><p>用于写入临时文件的方法。</p><p>写入的文件可以在客户端文件中通过 <code>@temp</code> 别名来引入。</p></li><li><p>示例：</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token comment">// 在 onPrepared hook 中写入临时文件</span>
  <span class="token keyword">async</span> <span class="token function">onPrepared</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">writeTemp</span><span class="token punctuation">(</span><span class="token string">&#39;foo.js&#39;</span><span class="token punctuation">,</span> <span class="token string">&quot;export const foo = &#39;bar&#39;&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token comment">// 在客户端文件中引入临时文件</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> foo <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@temp/foo&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="init" tabindex="-1"><a class="header-anchor" href="#init"><span>init</span></a></h3><ul><li>函数签名：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,17),E=n("li",null,[n("p",null,"详情："),n("p",null,"初始化 VuePress App 。")],-1),z=n("p",null,"参考：",-1),D=l(`<h3 id="prepare" tabindex="-1"><a class="header-anchor" href="#prepare"><span>prepare</span></a></h3><ul><li>函数签名：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),I=n("li",null,[n("p",null,"详情："),n("p",null,"准备客户端临时文件。")],-1),M=n("p",null,"参考：",-1),N=l(`<h3 id="build" tabindex="-1"><a class="header-anchor" href="#build"><span>build</span></a></h3><ul><li>函数签名：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),F=n("li",null,[n("p",null,"详情："),n("p",null,"生成静态站点文件。"),n("p",null,[a("该方法仅在 "),n("a",{href:"#createbuildapp"},"BuildApp"),a(" 中可用。")])],-1),R=n("p",null,"参考：",-1),H=l(`<h3 id="dev" tabindex="-1"><a class="header-anchor" href="#dev"><span>dev</span></a></h3><ul><li>函数签名：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token function">dev</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),V=n("li",null,[n("p",null,"详情："),n("p",null,"启动开发服务器。"),n("p",null,[a("该方法仅在 "),n("a",{href:"#createdevapp"},"DevApp"),a(" 中可用。")])],-1),C=n("p",null,"参考：",-1),S=l(`<h2 id="page" tabindex="-1"><a class="header-anchor" href="#page"><span>Page</span></a></h2><h3 id="createpage" tabindex="-1"><a class="header-anchor" href="#createpage"><span>createPage</span></a></h3><ul><li>函数签名：</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">createPage</span><span class="token operator">:</span> <span class="token punctuation">(</span>app<span class="token operator">:</span> App<span class="token punctuation">,</span> options<span class="token operator">:</span> PageOptions<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Page<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>参数：</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>app</td><td><code>App</code></td><td>VuePress App 实例。</td></tr><tr><td>options</td><td><code>PageOptions</code></td><td>创建 VuePress Page 的选项。</td></tr></tbody></table><ul><li><p>详情：</p><p>创建一个 VuePress Page 对象。</p></li><li><p>示例：</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createPage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/core&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token comment">// 在 onInitialized hook 中创建一个额外页面</span>
  <span class="token keyword">async</span> <span class="token function">onInitialized</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    app<span class="token punctuation">.</span>pages<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
      <span class="token keyword">await</span> <span class="token function">createPage</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        path<span class="token operator">:</span> <span class="token string">&#39;/foo.html&#39;</span><span class="token punctuation">,</span>
        frontmatter<span class="token operator">:</span> <span class="token punctuation">{</span>
          layout<span class="token operator">:</span> <span class="token string">&#39;Layout&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        content<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\
# 某个 Page

你好，世界。
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),T=n("li",null,[n("a",{href:"#pages"},"Node API > App 属性 > pages")],-1),L=n("h2",{id:"page-属性",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#page-属性"},[n("span",null,"Page 属性")])],-1),j=n("h3",{id:"path",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#path"},[n("span",null,"path")])],-1),O=n("li",null,[n("p",null,[a("类型： "),n("code",null,"string")])],-1),Z=n("li",null,[n("p",null,"详情："),n("p",null,"该 Page 的路由路径。")],-1),q=n("p",null,"参考：",-1),G=n("li",null,[n("a",{href:"#pathinferred"},"Node API > Page 属性 > pathInferred")],-1),U=n("h3",{id:"title",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#title"},[n("span",null,"title")])],-1),W=n("li",null,[n("p",null,[a("类型： "),n("code",null,"string")])],-1),J=n("li",null,[n("p",null,"详情："),n("p",null,"该 Page 的标题。")],-1),$=n("p",null,"参考：",-1),K=n("h3",{id:"lang",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#lang"},[n("span",null,"lang")])],-1),Q=l("<li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>该 Page 的语言。</p></li><li><p>示例：</p><ul><li><code>&#39;en-US&#39;</code></li><li><code>&#39;zh-CN&#39;</code></li></ul></li>",3),X=n("p",null,"参考：",-1),Y=n("h3",{id:"frontmatter",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#frontmatter"},[n("span",null,"frontmatter")])],-1),nn=n("li",null,[n("p",null,[a("类型： "),n("code",null,"PageFrontmatter")])],-1),an=n("li",null,[n("p",null,"详情："),n("p",null,"该 Page 的 Frontmatter 。")],-1),en=n("p",null,"参考：",-1),sn=l(`<h3 id="headers" tabindex="-1"><a class="header-anchor" href="#headers"><span>headers</span></a></h3><ul><li>类型： <code>PageHeader[]</code></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">PageHeader</span> <span class="token punctuation">{</span>
  level<span class="token operator">:</span> <span class="token builtin">number</span>
  title<span class="token operator">:</span> <span class="token builtin">string</span>
  slug<span class="token operator">:</span> <span class="token builtin">string</span>
  children<span class="token operator">:</span> PageHeader<span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),tn=n("li",null,[n("p",null,"详情："),n("p",null,"该 Page 的小标题。")],-1),ln=n("p",null,"参考：",-1),pn=l(`<h3 id="data" tabindex="-1"><a class="header-anchor" href="#data"><span>data</span></a></h3><ul><li>类型： <code>PageData</code></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">PageData</span> <span class="token punctuation">{</span>
  path<span class="token operator">:</span> <span class="token builtin">string</span>
  title<span class="token operator">:</span> <span class="token builtin">string</span>
  lang<span class="token operator">:</span> <span class="token builtin">string</span>
  frontmatter<span class="token operator">:</span> PageFrontmatter
  headers<span class="token operator">:</span> PageHeader<span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),on=n("li",null,[n("p",null,"详情："),n("p",null,"该 Page 的数据。"),n("p",null,"Page 数据可以在客户端代码中使用。")],-1),cn=n("p",null,"参考：",-1),dn=l('<h3 id="content" tabindex="-1"><a class="header-anchor" href="#content"><span>content</span></a></h3><ul><li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>该 Page 的未经渲染的原始内容。</p></li></ul><h3 id="contentrendered" tabindex="-1"><a class="header-anchor" href="#contentrendered"><span>contentRendered</span></a></h3><ul><li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>该 Page 的渲染后的内容。</p></li></ul><h3 id="date" tabindex="-1"><a class="header-anchor" href="#date"><span>date</span></a></h3>',5),rn=l("<li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>该 Page 的日期，遵从 &#39;yyyy-MM-dd&#39; 格式。</p></li><li><p>示例：</p><ul><li><code>&#39;0000-00-00&#39;</code></li><li><code>&#39;2021-08-16</code>&#39;</li></ul></li>",3),un=n("p",null,"参考：",-1),hn=n("h3",{id:"deps",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#deps"},[n("span",null,"deps")])],-1),kn=n("li",null,[n("p",null,[a("类型： "),n("code",null,"string[]")])],-1),vn=n("li",null,[n("p",null,"详情："),n("p",null,"该 Page 的依赖。"),n("p",null,[a("举例来说，如果在页面中导入了代码片段，那么被导入文件的绝对路径就会被添加到 "),n("code",null,"deps"),a(" 中。")])],-1),mn=n("p",null,"参考：",-1),gn=l(`<h3 id="links" tabindex="-1"><a class="header-anchor" href="#links"><span>links</span></a></h3><ul><li>类型： <code>MarkdownLink[]</code></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">MarkdownLink</span> <span class="token punctuation">{</span>
  raw<span class="token operator">:</span> <span class="token builtin">string</span>
  relative<span class="token operator">:</span> <span class="token builtin">string</span>
  absolute<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>详情：</p><p>该 Page 内容中包含的链接。</p></li></ul><h3 id="markdownenv" tabindex="-1"><a class="header-anchor" href="#markdownenv"><span>markdownEnv</span></a></h3>`,5),bn=l("<li><p>类型： <code>Record&lt;string, unknown&gt;</code></p></li><li><p>详情：</p><p>在使用 markdown-it 解析 Markdown 内容时的 <code>env</code> 对象。</p><p>一些 markdown-it 插件可能会在这个对象中存储一些额外的信息，你可以使用它们来进行高级定制化。</p><p>需要注意的是，其他的一些 Page 属性其实也是从 <code>env</code> 对象中获取到的，但是我们已经把这些属性从 <code>page.markdownEnv</code> 中移除掉了。</p></li>",2),fn=n("p",null,"参考：",-1),_n={href:"https://markdown-it.github.io/markdown-it/#MarkdownIt.parse",target:"_blank",rel:"noopener noreferrer"},wn=n("h3",{id:"pathinferred",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pathinferred"},[n("span",null,"pathInferred")])],-1),yn=l('<li><p>类型： <code>string | null</code></p></li><li><p>详情：</p><p>该 Page 根据文件路径推断出的路由路径。</p><p>默认情况下，路由路径是根据 Markdown 源文件的相对文件路径推断出来的。然而，用户可能会显式指定页面路由，比如通过 <a href="#permalink">permalink</a> 来指定该页面最终使用的路由路径。因此我们在 Page 属性中保留推断出来的路径，以便于你在某些情况下可能会用到它。</p><p>如果该 Page 不是来自于 Markdown 源文件，那么该属性会为 <code>null</code> 。</p></li><li><p>示例：</p><ul><li><code>&#39;/&#39;</code></li><li><code>&#39;/foo.html&#39;</code></li></ul></li>',3),Pn=n("p",null,"参考：",-1),An=n("li",null,[n("a",{href:"#path"},"Node API > Page 属性 > path")],-1),xn=n("h3",{id:"pathlocale",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pathlocale"},[n("span",null,"pathLocale")])],-1),Bn=l("<li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>该 Page 路由路径的 Locale 前缀。</p><p>它是根据页面的 Markdown 源文件相对路径、以及用户配置的 <code>locales</code> 的键推断得到的。</p></li><li><p>示例：</p><ul><li><code>&#39;/&#39;</code></li><li><code>&#39;/en/&#39;</code></li><li><code>&#39;/zh/&#39;</code></li></ul></li>",3),En=n("p",null,"参考：",-1),zn=n("h3",{id:"permalink",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#permalink"},[n("span",null,"permalink")])],-1),Dn=n("li",null,[n("p",null,[a("类型： "),n("code",null,"string | null")])],-1),In=n("li",null,[n("p",null,"详情："),n("p",null,"该 Page 的永久链接。")],-1),Mn=n("p",null,"参考：",-1),Nn=n("h3",{id:"routemeta",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#routemeta"},[n("span",null,"routeMeta")])],-1),Fn=n("li",null,[n("p",null,[a("类型： "),n("code",null,"Record<string, unknown>")])],-1),Rn=n("li",null,[n("p",null,"详情："),n("p",null,"附加到页面路由记录上的额外数据。")],-1),Hn=n("p",null,"参考：",-1),Vn=l('<div class="hint-container tip"><p class="hint-container-title">Route Meta 和 Page Data 的区别是什么？</p><p><a href="#routemeta">Route Meta</a> 和 <a href="#data">Page Data</a> 都可以在客户端代码中使用。然而， Route Meta 是附加在页面路由记录上的，因此当用户进入你的站点时，所有页面的 Route Meta 都会立即被加载。相比之下， Page Data 是存储在单独的文件中的，只有在用户进入对应页面时才会被加载。</p><p>因此，不建议在 Route Meta 中存储大量的信息，否则在站点有很多页面时，将会影响站点的初始加载速度。</p></div><h3 id="sfcblocks" tabindex="-1"><a class="header-anchor" href="#sfcblocks"><span>sfcBlocks</span></a></h3>',2),Cn=n("li",null,[n("p",null,[a("类型： "),n("code",null,"MarkdownSfcBlocks")])],-1),Sn=n("li",null,[n("p",null,"详情："),n("p",null,"该 Page 中提取出的 Vue SFC Blocks 。")],-1),Tn=n("p",null,"参考：",-1),Ln=l('<h3 id="slug" tabindex="-1"><a class="header-anchor" href="#slug"><span>slug</span></a></h3><ul><li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>该 Page 的 Slug 。</p><p>它是根据页面的 Markdown 源文件的文件名推断得到的。</p></li></ul><h3 id="filepath" tabindex="-1"><a class="header-anchor" href="#filepath"><span>filePath</span></a></h3><ul><li><p>类型： <code>string | null</code></p></li><li><p>详情：</p><p>该 Page 的 Markdown 源文件的绝对路径。</p><p>如果该 Page 不是来自于 Markdown 源文件，那么该属性会为 <code>null</code> 。</p></li></ul><h3 id="filepathrelative" tabindex="-1"><a class="header-anchor" href="#filepathrelative"><span>filePathRelative</span></a></h3><ul><li><p>类型： <code>string | null</code></p></li><li><p>详情：</p><p>该 Page 的 Markdown 源文件的相对路径。</p><p>如果该 Page 不是来自于 Markdown 源文件，那么该属性会为 <code>null</code> 。</p></li></ul>',6);function jn(On,Zn){const s=i("RouteLink"),p=i("ExternalLinkIcon");return c(),d("div",null,[u,h,k,n("p",null,[e(s,{to:"/zh/reference/plugin-api.html"},{default:t(()=>[a("插件 API")]),_:1}),a(" 的所有 Hooks 中都可以获取到 App 实例。")]),v,n("ul",null,[m,n("li",null,[g,n("p",null,[a("由用户设置的站点数据，包含所有的 "),e(s,{to:"/zh/reference/config.html#%E7%AB%99%E7%82%B9%E9%85%8D%E7%BD%AE"},{default:t(()=>[a("站点配置")]),_:1}),a(" ，可以在客户端代码中使用。")])])]),b,n("ul",null,[f,n("li",null,[_,n("p",null,[a("用于解析 Markdown 内容的 "),n("a",w,[a("markdown-it"),e(p)]),a(" 实例。")]),n("p",null,[a("它仅在 "),e(s,{to:"/zh/reference/plugin-api.html#oninitialized"},{default:t(()=>[a("onInitialized")]),_:1}),a(" 以及之后的 Hooks 中才可用。")])])]),y,n("ul",null,[P,n("li",null,[A,x,n("p",null,[a("它仅在 "),e(s,{to:"/zh/reference/plugin-api.html#oninitialized"},{default:t(()=>[a("onInitialized")]),_:1}),a(" 以及之后的 Hooks 中才可用。")])])]),B,n("ul",null,[E,n("li",null,[z,n("ul",null,[n("li",null,[e(s,{to:"/zh/advanced/architecture.html#%E6%A0%B8%E5%BF%83%E6%B5%81%E7%A8%8B%E4%B8%8E-hooks"},{default:t(()=>[a("深入 > 架构 > 核心流程与 Hooks")]),_:1})])])])]),D,n("ul",null,[I,n("li",null,[M,n("ul",null,[n("li",null,[e(s,{to:"/zh/advanced/architecture.html#%E6%A0%B8%E5%BF%83%E6%B5%81%E7%A8%8B%E4%B8%8E-hooks"},{default:t(()=>[a("深入 > 架构 > 核心流程与 Hooks")]),_:1})])])])]),N,n("ul",null,[F,n("li",null,[R,n("ul",null,[n("li",null,[e(s,{to:"/zh/advanced/architecture.html#%E6%A0%B8%E5%BF%83%E6%B5%81%E7%A8%8B%E4%B8%8E-hooks"},{default:t(()=>[a("深入 > 架构 > 核心流程与 Hooks")]),_:1})])])])]),H,n("ul",null,[V,n("li",null,[C,n("ul",null,[n("li",null,[e(s,{to:"/zh/advanced/architecture.html#%E6%A0%B8%E5%BF%83%E6%B5%81%E7%A8%8B%E4%B8%8E-hooks"},{default:t(()=>[a("深入 > 架构 > 核心流程与 Hooks")]),_:1})])])])]),S,n("ul",null,[n("li",null,[a("参考： "),n("ul",null,[T,n("li",null,[e(s,{to:"/zh/advanced/cookbook/adding-extra-pages.html"},{default:t(()=>[a("Cookbook > 添加额外页面")]),_:1})])])])]),L,j,n("ul",null,[O,Z,n("li",null,[q,n("ul",null,[n("li",null,[e(s,{to:"/zh/guide/page.html#%E8%B7%AF%E7%94%B1"},{default:t(()=>[a("指南 > 页面 > 路由")]),_:1})]),G])])]),U,n("ul",null,[W,J,n("li",null,[$,n("ul",null,[n("li",null,[e(s,{to:"/zh/reference/frontmatter.html#title"},{default:t(()=>[a("Frontmatter > title")]),_:1})])])])]),K,n("ul",null,[Q,n("li",null,[X,n("ul",null,[n("li",null,[e(s,{to:"/zh/reference/frontmatter.html#title"},{default:t(()=>[a("Frontmatter > lang")]),_:1})])])])]),Y,n("ul",null,[nn,an,n("li",null,[en,n("ul",null,[n("li",null,[e(s,{to:"/zh/reference/frontmatter.html"},{default:t(()=>[a("Frontmatter")]),_:1})])])])]),sn,n("ul",null,[tn,n("li",null,[ln,n("ul",null,[n("li",null,[e(s,{to:"/zh/reference/config.html#markdown-headers"},{default:t(()=>[a("配置 > markdown.headers")]),_:1})])])])]),pn,n("ul",null,[on,n("li",null,[cn,n("ul",null,[n("li",null,[e(s,{to:"/zh/reference/client-api.html#usepagedata"},{default:t(()=>[a("客户端 API > usePageData")]),_:1})]),n("li",null,[e(s,{to:"/zh/reference/plugin-api.html#extendspage"},{default:t(()=>[a("插件 API > extendsPage")]),_:1})])])])]),dn,n("ul",null,[rn,n("li",null,[un,n("ul",null,[n("li",null,[e(s,{to:"/zh/reference/frontmatter.html#date"},{default:t(()=>[a("Frontmatter > date")]),_:1})])])])]),hn,n("ul",null,[kn,vn,n("li",null,[mn,n("ul",null,[n("li",null,[e(s,{to:"/zh/reference/config.html#markdown-importcode"},{default:t(()=>[a("配置 > markdown.importCode")]),_:1})])])])]),gn,n("ul",null,[bn,n("li",null,[fn,n("ul",null,[n("li",null,[n("a",_n,[a("markdown-it > API Documentation > MarkdownIt > parse"),e(p)])])])])]),wn,n("ul",null,[yn,n("li",null,[Pn,n("ul",null,[n("li",null,[e(s,{to:"/zh/guide/page.html#%E8%B7%AF%E7%94%B1"},{default:t(()=>[a("指南 > 页面 > 路由")]),_:1})]),An])])]),xn,n("ul",null,[Bn,n("li",null,[En,n("ul",null,[n("li",null,[e(s,{to:"/zh/reference/config.html#locales"},{default:t(()=>[a("配置 > locales")]),_:1})])])])]),zn,n("ul",null,[Dn,In,n("li",null,[Mn,n("ul",null,[n("li",null,[e(s,{to:"/zh/reference/frontmatter.html#permalink"},{default:t(()=>[a("Frontmatter > permalink")]),_:1})]),n("li",null,[e(s,{to:"/zh/reference/frontmatter.html#permalinkpattern"},{default:t(()=>[a("Frontmatter > permalinkPattern")]),_:1})])])])]),Nn,n("ul",null,[Fn,Rn,n("li",null,[Hn,n("ul",null,[n("li",null,[e(s,{to:"/zh/reference/frontmatter.html#routemeta"},{default:t(()=>[a("Frontmatter > routeMeta")]),_:1})])])])]),Vn,n("ul",null,[Cn,Sn,n("li",null,[Tn,n("ul",null,[n("li",null,[e(s,{to:"/zh/reference/config.html#markdown-sfc"},{default:t(()=>[a("配置 > markdown.sfc")]),_:1})])])])]),Ln])}const Un=o(r,[["render",jn],["__file","node-api.html.vue"]]),Wn=JSON.parse('{"path":"/zh/reference/node-api.html","title":"Node API","lang":"zh-CN","frontmatter":{"icon":"fa6-brands:node-js","description":"Node API Node API 可以通过 vuepress/core 来引入。 App 的所有 Hooks 中都可以获取到 App 实例。 BuildApp 和 DevApp 除了 build 和 dev 方法外，拥有一样的属性和方法。 createBuildApp 函数签名： 参数： 详情： 创建一个 Build 模式的 App 实例，用于构建静...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://vuejs.press/reference/node-api.html"}],["meta",{"property":"og:url","content":"https://vuejs.press/zh/reference/node-api.html"}],["meta",{"property":"og:site_name","content":"VuePress"}],["meta",{"property":"og:title","content":"Node API"}],["meta",{"property":"og:description","content":"Node API Node API 可以通过 vuepress/core 来引入。 App 的所有 Hooks 中都可以获取到 App 实例。 BuildApp 和 DevApp 除了 build 和 dev 方法外，拥有一样的属性和方法。 createBuildApp 函数签名： 参数： 详情： 创建一个 Build 模式的 App 实例，用于构建静..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-02-06T14:32:58.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-06T14:32:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Node API\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-06T14:32:58.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"App","slug":"app","link":"#app","children":[{"level":3,"title":"createBuildApp","slug":"createbuildapp","link":"#createbuildapp","children":[]},{"level":3,"title":"createDevApp","slug":"createdevapp","link":"#createdevapp","children":[]}]},{"level":2,"title":"App 属性","slug":"app-属性","link":"#app-属性","children":[{"level":3,"title":"options","slug":"options","link":"#options","children":[]},{"level":3,"title":"siteData","slug":"sitedata","link":"#sitedata","children":[]},{"level":3,"title":"version","slug":"version","link":"#version","children":[]},{"level":3,"title":"env.isBuild","slug":"env-isbuild","link":"#env-isbuild","children":[]},{"level":3,"title":"env.isDev","slug":"env-isdev","link":"#env-isdev","children":[]},{"level":3,"title":"env.isDebug","slug":"env-isdebug","link":"#env-isdebug","children":[]},{"level":3,"title":"markdown","slug":"markdown","link":"#markdown","children":[]},{"level":3,"title":"pages","slug":"pages","link":"#pages","children":[]}]},{"level":2,"title":"App 方法","slug":"app-方法","link":"#app-方法","children":[{"level":3,"title":"dir","slug":"dir","link":"#dir","children":[]},{"level":3,"title":"writeTemp","slug":"writetemp","link":"#writetemp","children":[]},{"level":3,"title":"init","slug":"init","link":"#init","children":[]},{"level":3,"title":"prepare","slug":"prepare","link":"#prepare","children":[]},{"level":3,"title":"build","slug":"build","link":"#build","children":[]},{"level":3,"title":"dev","slug":"dev","link":"#dev","children":[]}]},{"level":2,"title":"Page","slug":"page","link":"#page","children":[{"level":3,"title":"createPage","slug":"createpage","link":"#createpage","children":[]}]},{"level":2,"title":"Page 属性","slug":"page-属性","link":"#page-属性","children":[{"level":3,"title":"path","slug":"path","link":"#path","children":[]},{"level":3,"title":"title","slug":"title","link":"#title","children":[]},{"level":3,"title":"lang","slug":"lang","link":"#lang","children":[]},{"level":3,"title":"frontmatter","slug":"frontmatter","link":"#frontmatter","children":[]},{"level":3,"title":"headers","slug":"headers","link":"#headers","children":[]},{"level":3,"title":"data","slug":"data","link":"#data","children":[]},{"level":3,"title":"content","slug":"content","link":"#content","children":[]},{"level":3,"title":"contentRendered","slug":"contentrendered","link":"#contentrendered","children":[]},{"level":3,"title":"date","slug":"date","link":"#date","children":[]},{"level":3,"title":"deps","slug":"deps","link":"#deps","children":[]},{"level":3,"title":"links","slug":"links","link":"#links","children":[]},{"level":3,"title":"markdownEnv","slug":"markdownenv","link":"#markdownenv","children":[]},{"level":3,"title":"pathInferred","slug":"pathinferred","link":"#pathinferred","children":[]},{"level":3,"title":"pathLocale","slug":"pathlocale","link":"#pathlocale","children":[]},{"level":3,"title":"permalink","slug":"permalink","link":"#permalink","children":[]},{"level":3,"title":"routeMeta","slug":"routemeta","link":"#routemeta","children":[]},{"level":3,"title":"sfcBlocks","slug":"sfcblocks","link":"#sfcblocks","children":[]},{"level":3,"title":"slug","slug":"slug","link":"#slug","children":[]},{"level":3,"title":"filePath","slug":"filepath","link":"#filepath","children":[]},{"level":3,"title":"filePathRelative","slug":"filepathrelative","link":"#filepathrelative","children":[]}]}],"git":{"createdTime":1701614677000,"updatedTime":1707229978000,"contributors":[{"name":"meteorlxy","email":"meteor.lxy@foxmail.com","commits":6},{"name":"Mr.Hope","email":"mister-hope@outlook.com","commits":5}]},"readingTime":{"minutes":7.08,"words":2125},"filePathRelative":"zh/reference/node-api.md","localizedDate":"2023年12月3日","autoDesc":true}');export{Un as comp,Wn as data};
