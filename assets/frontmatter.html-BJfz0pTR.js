import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as d,o as h,c as r,a as i,d as l,w as t,b as e,e as a}from"./app-B_gmKcBy.js";const p={},o=i("h1",{id:"frontmatter",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#frontmatter"},[i("span",null,"Frontmatter")])],-1),k=i("h2",{id:"date",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#date"},[i("span",null,"date")])],-1),c=i("li",null,[i("p",null,[e("类型： "),i("code",null,"string")])],-1),u=i("li",null,[i("p",null,"详情："),i("p",null,"页面的创建日期。"),i("p",null,[e("应按照 "),i("code",null,"yyyy-MM-dd"),e(" 的格式来指定日期，或者遵循 "),i("a",{href:"https://yaml.org/type/timestamp.html",target:"_blank",rel:"noopener noreferrer"},"YAML Timestamp Type"),e(" 。")])],-1),m=i("p",null,"参考：",-1),g=i("h2",{id:"description",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#description"},[i("span",null,"description")])],-1),y=i("li",null,[i("p",null,[e("类型： "),i("code",null,"string")])],-1),B=i("li",null,[i("p",null,"详情："),i("p",null,"页面的描述。"),i("p",null,[e("它将会覆盖站点配置中的 "),i("code",null,"description"),e(" 配置项。")])],-1),b=i("p",null,"参考：",-1),f=a(`<h2 id="head" tabindex="-1"><a class="header-anchor" href="#head"><span>head</span></a></h2><ul><li><p>类型： <code>HeadConfig[]</code></p></li><li><p>详情：</p><p>页面 <code>&lt;head&gt;</code> 标签内添加的额外标签。</p></li><li><p>示例：</p></li></ul><div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" data-title="md" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">---</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">meta</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">foo</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">yaml 数组语法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - [</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, { </span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">bar</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">方括号语法</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> }]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">---</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>渲染为：</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;foo&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;yaml 数组语法&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;bar&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;方括号语法&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),v=i("h2",{id:"lang",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#lang"},[i("span",null,"lang")])],-1),_=i("li",null,[i("p",null,[e("类型： "),i("code",null,"string")])],-1),F=i("li",null,[i("p",null,"详情："),i("p",null,"页面的语言。"),i("p",null,[e("它将会覆盖站点配置中的 "),i("code",null,"lang"),e(" 配置项")])],-1),A=i("p",null,"参考：",-1),E=a(`<h2 id="layout" tabindex="-1"><a class="header-anchor" href="#layout"><span>layout</span></a></h2><ul><li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>页面的布局。</p><p>布局是由主题提供的。如果你不指定该 Frontmatter ，则会使用默认布局。你应该参考主题自身的文档来了解其提供了哪些布局。</p><p>如果主题布局无法满足你的需求，你可以使用自定义布局组件。</p></li><li><p>示例：</p></li></ul><p>在 <code>.vuepress/client.ts</code> 文件中注册一个布局组件：</p><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">defineClientConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &#39;vuepress/client&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> CustomLayout</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &#39;./CustomLayout.vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> defineClientConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">  layouts</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    CustomLayout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 Frontmatter 中设置自定义布局：</p><div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" data-title="md" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">---</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">layout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">CustomLayout</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">---</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="permalink" tabindex="-1"><a class="header-anchor" href="#permalink"><span>permalink</span></a></h2>`,7),C=i("li",null,[i("p",null,[e("类型： "),i("code",null,"string | null")])],-1),x=i("li",null,[i("p",null,"详情："),i("p",null,"页面的永久链接。"),i("p",null,"它将会覆盖根据文件路径来决定的默认路由路径。"),i("p",null,[e("当被设置为 "),i("code",null,"null"),e(" 时，将会禁用页面的永久链接。")])],-1),D=i("p",null,"参考：",-1),M=i("li",null,[i("a",{href:"#permalinkpattern"},"Frontmatter > permalinkPattern")],-1),P=a(`<h2 id="permalinkpattern" tabindex="-1"><a class="header-anchor" href="#permalinkpattern"><span>permalinkPattern</span></a></h2><ul><li><p>类型： <code>string | null</code></p></li><li><p>详情：</p><p>为页面生成永久链接的 Pattern 。</p><p>它将会覆盖站点配置中的 <code>permalinkPattern</code> 配置项。</p><p>如果 Frontmatter 中设置了 <code>permalink</code> ，那么这个字段则不会生效。</p></li><li><p>使用：</p><table><thead><tr><th>Pattern</th><th>描述</th></tr></thead><tbody><tr><td><code>:year</code></td><td>创建日期的 年 部分</td></tr><tr><td><code>:month</code></td><td>创建日期的 月 部分</td></tr><tr><td><code>:day</code></td><td>创建日期的 日 部分</td></tr><tr><td><code>:slug</code></td><td>页面文件名的 Slug</td></tr><tr><td><code>:raw</code></td><td>原始路由路径</td></tr></tbody></table><p><code>:year</code>, <code>:month</code> 和 <code>:day</code> Pattern 根据如下优先级进行解析：</p><ul><li>Frontmatter 中的 <code>date</code> 字段。</li><li>符合 <code>yyyy-MM-dd-foobar.md</code> 或 <code>yyyy-MM-foobar.md</code> 日期格式的文件名。</li><li>符合 <code>yyyy/MM/dd/foobar.md</code> 或 <code>yyyy/MM/foobar.md</code> 日期格式的目录名。</li><li>默认值 <code>0000-00-00</code> 。</li></ul></li><li><p>示例 1 ：</p><p>页面文件名是 <code>foo-bar.md</code> 。</p><p>页面 Frontmatter 是：</p></li></ul><div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" data-title="md" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">---</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">date</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">2021-01-03</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">permalinkPattern</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">:year/:month/:day/:slug.html</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">---</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么页面的永久链接将会是 <code>2021/01/03/foo-bar.html</code> 。</p><ul><li><p>示例 2 ：</p><p>页面文件名是 <code>2021-01-03-bar-baz.md</code>。</p><p>页面 Frontmatter 是：</p></li></ul><div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" data-title="md" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">---</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">permalinkPattern</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">:year/:month/:day/:slug.html</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">---</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么页面的永久链接将会是 <code>2021/01/03/bar-baz.html</code> 。</p>`,7),z=i("li",null,[i("a",{href:"#date"},"Frontmatter > date")],-1),N=i("li",null,[i("a",{href:"#permalink"},"Frontmatter > permalink")],-1),T=i("h2",{id:"routemeta",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#routemeta"},[i("span",null,"routeMeta")])],-1),L=i("li",null,[i("p",null,[e("类型： "),i("code",null,"Record<string, unknown>")])],-1),q=i("li",null,[i("p",null,"详情："),i("p",null,"附加到页面路由的自定义数据。")],-1),I=i("p",null,"参考：",-1),w=i("h2",{id:"title",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#title"},[i("span",null,"title")])],-1),H=i("li",null,[i("p",null,[e("类型： "),i("code",null,"string")])],-1),V=i("li",null,[i("p",null,"详情："),i("p",null,"页面的标题。"),i("p",null,[e("如果你不在 Frontmatter 中设置 "),i("code",null,"title"),e(" ，那么页面中第一个一级标题（即 "),i("code",null,"# title"),e("）的内容会被当作标题使用。")])],-1),R=i("p",null,"参考：",-1);function S(j,Y){const s=d("RouteLink");return h(),r("div",null,[o,k,i("ul",null,[c,u,i("li",null,[m,i("ul",null,[i("li",null,[l(s,{to:"/zh/reference/node-api.html#date"},{default:t(()=>[e("Node API > Page 属性 > date")]),_:1})])])])]),g,i("ul",null,[y,B,i("li",null,[b,i("ul",null,[i("li",null,[l(s,{to:"/zh/reference/config.html#description"},{default:t(()=>[e("配置 > description")]),_:1})])])])]),f,i("ul",null,[i("li",null,[e("参考： "),i("ul",null,[i("li",null,[l(s,{to:"/zh/reference/config.html#head"},{default:t(()=>[e("配置 > head")]),_:1})])])])]),v,i("ul",null,[_,F,i("li",null,[A,i("ul",null,[i("li",null,[l(s,{to:"/zh/reference/config.html#lang"},{default:t(()=>[e("配置 > lang")]),_:1})]),i("li",null,[l(s,{to:"/zh/reference/node-api.html#lang"},{default:t(()=>[e("Node API > Page 属性 > lang")]),_:1})])])])]),E,i("ul",null,[C,x,i("li",null,[D,i("ul",null,[M,i("li",null,[l(s,{to:"/zh/guide/page.html#%E8%B7%AF%E7%94%B1"},{default:t(()=>[e("指南 > 页面 > 路由")]),_:1})]),i("li",null,[l(s,{to:"/zh/reference/node-api.html#permalink"},{default:t(()=>[e("Node API > Page 属性 > permalink")]),_:1})])])])]),P,i("ul",null,[i("li",null,[e("参考： "),i("ul",null,[i("li",null,[l(s,{to:"/zh/reference/config.html#permalinkpattern"},{default:t(()=>[e("配置 > permalinkPattern")]),_:1})]),z,N,i("li",null,[l(s,{to:"/zh/reference/node-api.html#permalink"},{default:t(()=>[e("Node API > Page 属性 > permalink")]),_:1})])])])]),T,i("ul",null,[L,q,i("li",null,[I,i("ul",null,[i("li",null,[l(s,{to:"/zh/reference/node-api.html#routeMeta"},{default:t(()=>[e("Node API > Page 属性 > routeMeta")]),_:1})])])])]),w,i("ul",null,[H,V,i("li",null,[R,i("ul",null,[i("li",null,[l(s,{to:"/zh/reference/node-api.html#title"},{default:t(()=>[e("Node API > Page 属性 > title")]),_:1})])])])])])}const O=n(p,[["render",S],["__file","frontmatter.html.vue"]]),U=JSON.parse('{"path":"/zh/reference/frontmatter.html","title":"Frontmatter","lang":"zh-CN","frontmatter":{"icon":"fa-solid:bars","description":"Frontmatter date 类型： string 详情： 页面的创建日期。 应按照 yyyy-MM-dd 的格式来指定日期，或者遵循 YAML Timestamp Type 。 参考： description 类型： string 详情： 页面的描述。 它将会覆盖站点配置中的 description 配置项。 参考： head 类型： HeadC...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://vuejs.press/reference/frontmatter.html"}],["meta",{"property":"og:url","content":"https://vuejs.press/zh/reference/frontmatter.html"}],["meta",{"property":"og:site_name","content":"VuePress"}],["meta",{"property":"og:title","content":"Frontmatter"}],["meta",{"property":"og:description","content":"Frontmatter date 类型： string 详情： 页面的创建日期。 应按照 yyyy-MM-dd 的格式来指定日期，或者遵循 YAML Timestamp Type 。 参考： description 类型： string 详情： 页面的描述。 它将会覆盖站点配置中的 description 配置项。 参考： head 类型： HeadC..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-05-27T07:59:04.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-27T07:59:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Frontmatter\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-27T07:59:04.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"date","slug":"date","link":"#date","children":[]},{"level":2,"title":"description","slug":"description","link":"#description","children":[]},{"level":2,"title":"head","slug":"head","link":"#head","children":[]},{"level":2,"title":"lang","slug":"lang","link":"#lang","children":[]},{"level":2,"title":"layout","slug":"layout","link":"#layout","children":[]},{"level":2,"title":"permalink","slug":"permalink","link":"#permalink","children":[]},{"level":2,"title":"permalinkPattern","slug":"permalinkpattern","link":"#permalinkpattern","children":[]},{"level":2,"title":"routeMeta","slug":"routemeta","link":"#routemeta","children":[]},{"level":2,"title":"title","slug":"title","link":"#title","children":[]}],"git":{"createdTime":1701614677000,"updatedTime":1716796744000,"contributors":[{"name":"meteorlxy","email":"meteor.lxy@foxmail.com","commits":5},{"name":"Mr.Hope","email":"mister-hope@outlook.com","commits":3},{"name":"Mister-Hope","email":"mister-hope@outlook.com","commits":1},{"name":"张怀文","email":"mister-hope@outlook.com","commits":1}]},"readingTime":{"minutes":2.5,"words":750},"filePathRelative":"zh/reference/frontmatter.md","localizedDate":"2023年12月3日","autoDesc":true}');export{O as comp,U as data};
